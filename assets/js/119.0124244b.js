(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{412:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"配置文件中的取值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件中的取值"}},[t._v("#")]),t._v(" 配置文件中的取值")]),t._v(" "),s("blockquote",[s("p",[t._v("作为配置类的取值途径，将配置文件中的值注入到变量中")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"#{systemProperties['os.name']}\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" osName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"变量取值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量取值"}},[t._v("#")]),t._v(" 变量取值")]),t._v(" "),s("blockquote",[s("p",[t._v("通过表达式去变量中取值")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("# 使用id作为缓存的key，如果缓存中有值，就直接返回，如果没有值，就执行方法，将返回值放入缓存中\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Cacheable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("关键字")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("this")]),t._v(" "),s("td",[t._v("当前bean")])]),t._v(" "),s("tr",[s("td",[t._v("root")]),t._v(" "),s("td",[t._v("当前根对象")])]),t._v(" "),s("tr",[s("td",[t._v("target")]),t._v(" "),s("td",[t._v("当前目标对象")])]),t._v(" "),s("tr",[s("td",[t._v("args")]),t._v(" "),s("td",[t._v("当前方法参数对象数组")])]),t._v(" "),s("tr",[s("td",[t._v("#root.methodName")]),t._v(" "),s("td",[t._v("当前方法名")])]),t._v(" "),s("tr",[s("td",[t._v("#root.target")]),t._v(" "),s("td",[t._v("当前目标对象")])]),t._v(" "),s("tr",[s("td",[t._v("#root.targetClass")]),t._v(" "),s("td",[t._v("当前目标对象类")])]),t._v(" "),s("tr",[s("td",[t._v("#root.args")]),t._v(" "),s("td",[t._v("当前方法参数对象数组")])]),t._v(" "),s("tr",[s("td",[t._v("#root.caches")]),t._v(" "),s("td",[t._v("当前缓存对象数组")])]),t._v(" "),s("tr",[s("td",[t._v("#root.caches[0].name")]),t._v(" "),s("td",[t._v("当前缓存对象数组中第一个缓存的名字")])]),t._v(" "),s("tr",[s("td",[t._v("#root.caches[0].key")]),t._v(" "),s("td",[t._v("当前缓存对象数组中第一个缓存的key")])]),t._v(" "),s("tr",[s("td",[t._v("#root.caches[0].condition")]),t._v(" "),s("td",[t._v("当前缓存对象数组中第一个缓存的condition")])]),t._v(" "),s("tr",[s("td",[t._v("#root.caches[0].unless")]),t._v(" "),s("td",[t._v("当前缓存对象数组中第一个缓存的unless")])]),t._v(" "),s("tr",[s("td",[t._v("#result")]),t._v(" "),s("td",[t._v("方法执行后的返回值")])]),t._v(" "),s("tr",[s("td",[t._v("#argument")]),t._v(" "),s("td",[t._v("方法参数的别名，如#argument[0]、#p0、#a0都是第一个参数")])]),t._v(" "),s("tr",[s("td",[t._v("#result.id")]),t._v(" "),s("td",[t._v("方法执行后的返回值的id属性")])]),t._v(" "),s("tr",[s("td",[t._v("#a0")]),t._v(" "),s("td",[t._v("方法参数中的第一个参数")])]),t._v(" "),s("tr",[s("td",[t._v("#p0")]),t._v(" "),s("td",[t._v("方法参数中的第一个参数")])])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    # 正常key都是取入参作为key，如果需要取返回值作为key，可以使用#result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Cacheable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#result.id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("store")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDao")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("save")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"类似技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类似技术"}},[t._v("#")]),t._v(" 类似技术")]),t._v(" "),s("blockquote",[s("p",[t._v("jsonPath 也可以最为一个类似的技术，但是它是用来解析json的，而spel是用来解析表达式的，所以它们的应用场景是不一样的")])])])}),[],!1,null,null,null);s.default=e.exports}}]);